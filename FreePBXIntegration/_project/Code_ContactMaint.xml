<Graph ClassName="ContactMaint" Source="#CDATA" IsNew="True" FileType="ExistingGraph">
    <CDATA name="Source"><![CDATA[using System;
using System.Collections;
using System.Collections.Generic;
using System.Linq;
using System.Net.Http;
using System.Net.Http.Headers;
using System.Net;
using PX.Common;
using PX.Data;
using PX.Objects.AR;
using PX.Objects.CR.MassProcess;
using PX.Objects.GL;
using PX.Objects.CS;
using PX.Objects.EP;
using PX.SM;
using PX.Objects;
using PX.Objects.CR;


namespace PX.Objects.CR
{
  public class ContactMaint_Extension : PXGraphExtension<ContactMaint>
  {
  
        public PXAction<Contact> callPhone1;
        [PXUIField(DisplayName = "Call Phone 1", MapEnableRights = PXCacheRights.Select, MapViewRights = PXCacheRights.Select)]
        [PXButton]
        public virtual IEnumerable CallPhone1(PXAdapter adapter)
        {
            Contact contact = Base.Contact.Current; 
            InitiateOutboundCall(contact.Phone1);

            return adapter.Get();
        }
          
        public PXAction<Contact> callPhone2;
        [PXUIField(DisplayName = "Call Phone 2", MapEnableRights = PXCacheRights.Select, MapViewRights = PXCacheRights.Select)]
        [PXButton]
        public virtual IEnumerable CallPhone2(PXAdapter adapter)
        {
            Contact contact = Base.Contact.Current; 
            InitiateOutboundCall(contact.Phone2);
  
            return adapter.Get();
        }
          
        public PXAction<Contact> callPhone3;
        [PXUIField(DisplayName = "Call Phone 3", MapEnableRights = PXCacheRights.Select, MapViewRights = PXCacheRights.Select)]
        [PXButton]
        public virtual IEnumerable CallPhone3(PXAdapter adapter)
        {
            Contact contact = Base.Contact.Current; 
            InitiateOutboundCall(contact.Phone3);

            return adapter.Get();
        }

        public void MyPut()
        {
 
                HttpClient client = new HttpClient(
                new HttpClientHandler
                {
                    UseCookies = true,
                    CookieContainer = new CookieContainer()
                })
            {
                BaseAddress = new Uri(""),
                DefaultRequestHeaders =
                    {
                        Accept = { MediaTypeWithQualityHeaderValue.Parse("text/json") }
                    }
            };

            var response = client.PostAsync("http://ipaddress/call.php??exten=SIP/100&number=9999999999", new StringContent("", System.Text.Encoding.UTF8, "application/json")).Result;
            var content = response.Content.ReadAsStringAsync().Result;
            response.EnsureSuccessStatusCode();
        }

        protected virtual void InitiateOutboundCall(string PhoneNumber)
        {
            // Get Ext and SIP Credential from user
            // Get IP from branch
            MyPut();
        }
          
        

    #region Event Handlers

    #endregion
  }
}]]></CDATA>
</Graph>